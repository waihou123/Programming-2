TASK 1
1) Triangle.java
2) Error because the file has no main method
3) import java.util.*;
public class TriangleDemo
{
   public static void main(String[] args)
   {
      //create a Scanner object
      Scanner input = new Scanner(System.in);

      // Create a Triangle object.
      Triangle tri = new Triangle();

      // Prompt user to input value for height and base                 
      System.out.print("Enter Height\t:");
      double height = input.nextDouble();
      System.out.print("Enter Base\t:");
      double base = input.nextDouble();
      //Set the height and base (use mutator) 
      tri.set(height,base);
      // Display the height, base and area (use accessor)
      System.out.println("The pyramid's height is " + tri.getHeight());
      System.out.println("The pyramid's base is " + tri.getBase());
      System.out.println("The pyramid's area is " + tri.getArea());
   }
}



TASK 2
import java.util.*;
public class TriangleDemo
{
   public static void main(String[] args)
   {
      //create a Scanner object
      Scanner in = new Scanner(System.in);

      // Create a Triangle object.
      Triangle tri = new Triangle();

      // Prompt user to input value for height and base                 
      System.out.print("Enter Height: ");
      double height = in.nextDouble();
      System.out.print("Enter Base: ");
      double base = in.nextDouble();
      //Set the height and base (use mutator) 
      tri.set(height,base);
      // Display the height, base and area (use accessor)
      System.out.println("The pyramid's height is " + tri.getHeight());
      System.out.println("The pyramid's base is " + tri.getBase());
      System.out.println("The pyramid's area is " + tri.getArea());
   }
}


class Triangle
{
     private double height;
     private double base;


     public void setHeight(double len)
     {
          height = len;
     }

     // The setBase method accepts an argument which is 
     //stored in the base field. 
    
     public void setBase(double b)
     {
          base = b;
     }

     //The set method accepts two arguments which are 
     //stored in the height and base fields.
  
     public void set(double len, double b)
     {
          height = len;
          base = b;
     }

    // The getHeight method returns the value stored in the 
    //  height field.

     public double getHeight()
     {
          return height;
     }

     // The getBase method returns the value stored in the   
     //base field

     public double getBase()
     {
          return base;
     }

     // The getArea method returns the value of area
    // with formula : 0.5 * height * base

     public double getArea()
     {
          return 0.5 * height * base;
     }
}

3a) object = tri
 b) user-defined methods with return value = getHeight(), getBase(), getArea()
 c) user-defined methods with passing-parameters = setHeight(double len),setBase(double b),set(double len, double b)
 d) accessor methods = getHeight(), getBase(), getArea()
 e) mutator methods = setHeight(double len),setBase(double b),set(double len, double b)
    
    

TASK 3
import java.util.*;
    class Employee{
       int employeeID; 
       double grossPay, stateTax, federalTax;
    
    public void input(){
        Scanner input = new Scanner(System.in);
        
        System.out.print("Enter your employee ID number: ");
        employeeID = input.nextInt();
        System.out.print("Enter your Gross Pay: RM");
        grossPay = input.nextDouble();
        System.out.print("Enter your State Tax: RM");
        stateTax = input.nextDouble();
        System.out.print("Enter your Federal Tax: RM");
        federalTax = input.nextDouble();
    }
}
    class Payroll{
        private double netPay, grossPay, stateTax, federalTax;
        
        public Payroll(double grossPay, double stateTax, double federalTax){
            this.grossPay = grossPay;
            this.stateTax = stateTax;
            this.federalTax = federalTax;
        }
        public double calculateNetPay(){
            netPay = grossPay - stateTax - federalTax;
            return netPay;
        }
        public void printOutput(){
            System.out.printf("Net pay is RM%.2f",calculateNetPay());
        }
}
        public class PayrollDemo {
            public static void main(String[] args){
                Employee emplo = new Employee();
                emplo.input();
                Payroll paid = new Payroll(emplo.grossPay, emplo.stateTax, emplo.federalTax);
                paid.printOutput();
       }  
}
